name: Backend Workflow

on:
  pull_request:
  push:
    branches:
      - '**'

jobs:
  pre_commit_checks:
    name: Pre-Commit checks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@main
        with:
          submodules: true

      - uses: actions/setup-python@v5
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Sync
        run: uv sync --all-extras
      - uses: pre-commit/action@main
  build-prod:
    name: Build and push images
    runs-on: ubuntu-latest
    environment:
      name: production
      url: 
    strategy:
      matrix:
        include:
          - image: ./frontend_src
            ecr_repo: STREAMLIT_REPO_NAME
          - image: ./data_sources_processing_src
            ecr_repo: DATA_PROCESSING_REPO_NAME

    if: github.ref == 'refs/heads/release'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets[matrix.ecr_repo] }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR
          cd ${{ matrix.image }}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  terraform:
    name: Terraform configurations
    needs: build-prod
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./terraform"
    if: github.ref == 'refs/heads/release'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2
      
      - name: Terraform init
        id: init
        run: terraform init -upgrade
      
      - name: Terraform validate
        id: validate
        run: terraform validate
      
      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=prod.tfvars -no-color
      
      - name: Terraform apply
        id: apply
        run: terraform apply -var-file=prod.tfvars -auto-approve -no-color
